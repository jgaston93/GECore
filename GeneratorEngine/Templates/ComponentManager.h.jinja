#ifndef COMPONENT_MANAGER_HPP
#define COMPONENT_MANAGER_HPP
{% for component in components_model %}
#include "{{ component }}.hpp"
{%- endfor %}

#include "ComponentArray.hpp"
#include "Entity.hpp"

class ComponentManager
{
public:
  {% for component in components_model %}
  void add{{ component }}Component(Entity entity, const {{ component }}& component);
  void remove{{ component }}Component(Entity entity);
  void get{{ component }}Component(Entity entity, {{ component }}* component);
  {% endfor %}

  void entityDestroyed(Entity entity)
  {
    {%- for component in components_model %}
    m_{{ component|lower }}_array.removeComponent(entity);
    {%- endfor %}
  }
private:
  {%- for component in components_model %}
  ComponentArray<{{ component }}> m_{{ component|lower }}_array;
  {%- endfor %}
};

#endif // COMPONENT_MANAGER_HPP