#include "ComponentManager.hpp"

{% for component in components_model %}
template<>
void ComponentManager::addComponent<{{ component }}>(Entity entity, const {{ component }}& component)
{
  m_{{ component|lower }}_array.addComponent(entity, component);
};

template<>
void ComponentManager::removeComponent<{{ component }}>(Entity entity)
{
  m_{{ component|lower }}_array.removeComponent(entity);
};

template<>
void ComponentManager::getComponent<{{ component }}>(Entity entity, {{ component }} *&component)
{
  m_{{ component|lower }}_array.getComponent(entity, component);
};
{% endfor %}